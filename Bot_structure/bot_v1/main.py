import json

import telebot
from telebot import types
from Sistem_files import token, admin_list
import requests
from bs4 import BeautifulSoup



bot = telebot.TeleBot(token.TOKEN)
admin_id = admin_list.admin_id




inline_kb_st = types.InlineKeyboardMarkup(row_width=2)
inline_bt_1 = types.InlineKeyboardButton('–ó–∞–ø—É—Å—Ç–∏—Ç—å "–õ—é–ú"', 'https://www.wikipedia.org')
inline_bt_2 = types.InlineKeyboardButton('–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ê—Ñ–∏—à–∞', 'https://www.afisha.ru')
inline_bt_3 = types.InlineKeyboardButton('–ù–∞—à–∞ –ê—Ñ–∏—à–∞ (–ø—Ä—è–º–æ –≤ –±–æ—Ç–µ)', callback_data='check_lum_afisha')
inline_bt_4 = types.InlineKeyboardButton(text="–û –Ω–∞—Å!", callback_data='about_us')
inline_bt_5 = types.InlineKeyboardButton('–ù–∞—à–∞ –ê—Ñ–∏—à–∞', 'https://t.me/+O9krp9Je02RjNWEy')

inline_kb_st.add(inline_bt_1).add(inline_bt_2).add(inline_bt_5).add(inline_bt_4).add(inline_bt_3)

keyboard_start = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2,
                                               input_field_placeholder='"–õ—é–ú"- –õ—é–±–ª—é –ú–æ—Å–∫–≤—É!',
                                                   one_time_keyboard=True)

button1 = types.KeyboardButton('–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
button2 = types.KeyboardButton('–ö–Ω–æ–ø–∫–∞ 2')
button3 = types.KeyboardButton('–ö–Ω–æ–ø–∫–∞ 3')

keyboard_start.add(button1, button2, button3)  # –ö–Ω–æ–ø–∫–∏ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏




# keyboard.add(button1).add(button2).add(button3) #.add(button4).add(button5) #–ö–Ω–æ–ø–∫–∏ –ø–æ —à–∏–∏—Ä–∏–Ω–µ


class CommandStart:


    @bot.message_handler(commands=['start'])
    def handle_start(message):
        bot.send_photo(message.chat.id, 'https://imgur.com/a/O1lm2hZ',
                       f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.chat.username}!'
                       f'\n'
                       f'\n–≠—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ ¬´–õ—é–ú¬ª - –õ—é–±–ª—é –ú–æ—Å–∫–≤—É!'
                       f'\n'
                       f'\n –í –º–µ–Ω—é –Ω–∏–∂–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏:'
                       f'\n -–∞–∫—Ç—É–∞–ª—å–Ω—É—é –∞—Ñ–∏—à—É —Å–æ–±—ã—Ç—ã–π –≤ –ú–æ—Å–∫–≤–µ'
                       f'\n -–∞–≤—Ç–æ—Ä—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø—Ä–æ–≥—É–ª–æ–∫'
                       f'\n -—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–≤–∏–∑—ã'
                       , reply_markup=inline_kb_st)


        bot.send_message(message.chat.id, f'–ò–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=keyboard_start, disable_notification=True)



class AdmPanel:
    @bot.message_handler(commands=['adm'])
    def amd_panel(message):
        if message.from_user.id in admin_id:
            amd_kb = types.InlineKeyboardMarkup(row_width=2)
            amd_b1 = types.InlineKeyboardButton('–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è 1', callback_data='adm1')
            amd_b2 = types.InlineKeyboardButton('–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è 2', callback_data='amd2')
            amd_b3 = types.InlineKeyboardButton('–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è 3', callback_data='adm3')
            amd_kb.add(amd_b1).add(amd_b2).add(amd_b3)
            bot.send_message(message.chat.id, f'–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å', reply_markup=amd_kb)

        else:
            bot.send_message(message.chat.id, f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏')



class CallBackData:


    @bot.callback_query_handler(func=lambda call: call.data == 'about_us')
    def start_lum(call):

        inline_kb_link = types.InlineKeyboardMarkup()
        inline_link = types.InlineKeyboardButton('t.me/lum_moscow'
                                                 , 'https://t.me/lum_moscow')
        inline_kb_link.add(inline_link)

        message = call.message
        bot.send_message(message.chat.id, f'–õ—é–ú - —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∞–≤—Ç–æ—Ä—Å–∫–∏–µ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∞—É–¥–∏–æ—ç–∫—Å–∫—É—Ä—Å–∏–∏ –ø–æ –ú–æ—Å–∫–≤–µ.'
                                          f'\n'
                                          f'\n–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ –Ω–æ–≤–æ–º—É –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é —ç–∫—Å–∫—É—Ä—Å–∏–π –∏ –ø–æ–∫–∞–∑–∞—Ç—å –ú–æ—Å–∫–≤—É —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω - —Å–ø–æ—Ä—Ç, –∏—Å–∫—É—Å—Å—Ç–≤–æ, –∏—Å—Ç–æ—Ä–∏—è, –ª–∏—á–Ω–æ—Å—Ç–∏, —Å–æ–±—ã—Ç–∏—è –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ.'
                                          f'\n'
                                          f'\n–ï—Å–ª–∏ –≤—ã –ª—é–±–∏—Ç–µ –ú–æ—Å–∫–≤—É —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –º—ã, –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å—Ç–æ–ª–∏—Ü–µ–π –ø–æ–±–ª–∏–∂–µ —Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!'
                                          f'\n'
                                          f'\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞'
                                          f'\n'
                                          f'                                                  üëáüëáüëá' ,
                         reply_markup=inline_kb_link)


        # bot.send_message(message.chat.id, f'–ù–∞—à–∞ –∫–æ–º–º–∞–Ω–¥–∞:' ,reply_markup=inline_social_media_kb)

    # inline_bt_3 = types.InlineKeyboardButton('C—Ç–∞—Ç—å —á–∞—Å—Ç–∏—á–∫–æ–π –õ–Æ–ú', 'https://t.me/lum_moscow')
    @bot.callback_query_handler(func=lambda call: call.data == 'adm1')
    def hanlde_adm1(call):
        message = call.message
        bot.send_message(message.chat.id, f'–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–∫—Ü–∏—è 1')

    @bot.callback_query_handler(func=lambda call: call.data == 'amd2')
    def hanlde_adm1(call):
        message = call.message
        bot.send_message(message.chat.id, f'–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–∫—Ü–∏—è 2')

    @bot.callback_query_handler(func=lambda call: call.data == 'adm3')
    def hanlde_adm1(call):
        message = call.message
        bot.send_message(message.chat.id, f'–ê–¥–º–∏–Ω—Å–∫–∞—è —Ñ—É–∫—Ü–∏—è 3')

    @bot.callback_query_handler(func=lambda call: call.data == 'check_lum_afisha')
    def call_back_data_afisha(call):
        message = call.message
        r = requests.get('http://127.0.0.1:8000/afisha_bot/')
        print(r.text)
        soup = BeautifulSoup(r.text, 'html.parser')
        bot.send_message(message.chat.id, f'–ê—Ñ–∏—à–∞ —ç–∫—Å–∫—É—Ä—Å–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n{soup.p.string}')

        # a = requests.get('http://127.0.0.1:8000/route')
        # print(a.text)
        # soup = BeautifulSoup(r.text, 'html.parser')





class NotHandle:

    @bot.message_handler(content_types=['video', 'audio', 'sticker', 'photo', 'document', 'contact', 'emoji'])
    def handle_content_types(message):
        bot.send_message(message.chat.id, f'–ë–æ—Ç —Ç–∞–∫–æ–µ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç'

                         f'\n–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥:', reply_markup=inline_kb_st)


class ReplyButtons:

    @bot.message_handler(func=lambda message: True)
    def handle_message(message):

        if message.text == '–î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞':
            # bot.send_message(message.chat.id,f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',  reply_markup=inline_kb_st)
            CommandStart.handle_start(message)

        elif message.text == '–ö–Ω–æ–ø–∫–∞ 2':
            bot.send_message(message.chat.id, f'–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 2', reply_markup=inline_kb_st)

        elif message.text == '–ö–Ω–æ–ø–∫–∞ 3':
            bot.send_message(message.chat.id, f'–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 3', reply_markup=inline_kb_st)


        else:
            bot.send_message(message.chat.id, f'–¢–∞–∫–æ–π –∫–æ–º–º–∞–Ω–¥—ã –Ω–µ—Ç'
                                              f'\n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥',
                             reply_markup=inline_kb_st)





bot.infinity_polling()

